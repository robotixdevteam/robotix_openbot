// Generated by view binder compiler. Do not edit!
package org.openbot.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openbot.R;

public final class FragmentModelManagementBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton addModel;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final RecyclerView modelListContainer;

  @NonNull
  public final Spinner modelSpinner;

  private FragmentModelManagementBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton addModel, @NonNull LinearLayout linearLayout3,
      @NonNull RecyclerView modelListContainer, @NonNull Spinner modelSpinner) {
    this.rootView = rootView;
    this.addModel = addModel;
    this.linearLayout3 = linearLayout3;
    this.modelListContainer = modelListContainer;
    this.modelSpinner = modelSpinner;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentModelManagementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentModelManagementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_model_management, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentModelManagementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addModel;
      FloatingActionButton addModel = rootView.findViewById(id);
      if (addModel == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = rootView.findViewById(id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.modelListContainer;
      RecyclerView modelListContainer = rootView.findViewById(id);
      if (modelListContainer == null) {
        break missingId;
      }

      id = R.id.model_spinner;
      Spinner modelSpinner = rootView.findViewById(id);
      if (modelSpinner == null) {
        break missingId;
      }

      return new FragmentModelManagementBinding((ConstraintLayout) rootView, addModel,
          linearLayout3, modelListContainer, modelSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
