// Generated by view binder compiler. Do not edit!
package org.openbot.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openbot.R;

public final class FragmentControllerMappingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ShapeableImageView btnA;

  @NonNull
  public final ShapeableImageView btnB;

  @NonNull
  public final Button btnL1;

  @NonNull
  public final Button btnL2;

  @NonNull
  public final Button btnR1;

  @NonNull
  public final Button btnR2;

  @NonNull
  public final ShapeableImageView btnX;

  @NonNull
  public final ShapeableImageView btnY;

  @NonNull
  public final ConstraintLayout buttonContainer;

  @NonNull
  public final ImageView dPad;

  @NonNull
  public final ImageView front;

  @NonNull
  public final ImageView joyLeft;

  @NonNull
  public final ImageView joyLeftTip;

  @NonNull
  public final ImageView joyRight;

  @NonNull
  public final ImageView joyRightTip;

  @NonNull
  public final ImageView startButton;

  @NonNull
  public final TextView textStart;

  private FragmentControllerMappingBinding(@NonNull ConstraintLayout rootView,
      @NonNull ShapeableImageView btnA, @NonNull ShapeableImageView btnB, @NonNull Button btnL1,
      @NonNull Button btnL2, @NonNull Button btnR1, @NonNull Button btnR2,
      @NonNull ShapeableImageView btnX, @NonNull ShapeableImageView btnY,
      @NonNull ConstraintLayout buttonContainer, @NonNull ImageView dPad, @NonNull ImageView front,
      @NonNull ImageView joyLeft, @NonNull ImageView joyLeftTip, @NonNull ImageView joyRight,
      @NonNull ImageView joyRightTip, @NonNull ImageView startButton, @NonNull TextView textStart) {
    this.rootView = rootView;
    this.btnA = btnA;
    this.btnB = btnB;
    this.btnL1 = btnL1;
    this.btnL2 = btnL2;
    this.btnR1 = btnR1;
    this.btnR2 = btnR2;
    this.btnX = btnX;
    this.btnY = btnY;
    this.buttonContainer = buttonContainer;
    this.dPad = dPad;
    this.front = front;
    this.joyLeft = joyLeft;
    this.joyLeftTip = joyLeftTip;
    this.joyRight = joyRight;
    this.joyRightTip = joyRightTip;
    this.startButton = startButton;
    this.textStart = textStart;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentControllerMappingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentControllerMappingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_controller_mapping, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentControllerMappingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnA;
      ShapeableImageView btnA = rootView.findViewById(id);
      if (btnA == null) {
        break missingId;
      }

      id = R.id.btnB;
      ShapeableImageView btnB = rootView.findViewById(id);
      if (btnB == null) {
        break missingId;
      }

      id = R.id.btnL1;
      Button btnL1 = rootView.findViewById(id);
      if (btnL1 == null) {
        break missingId;
      }

      id = R.id.btnL2;
      Button btnL2 = rootView.findViewById(id);
      if (btnL2 == null) {
        break missingId;
      }

      id = R.id.btnR1;
      Button btnR1 = rootView.findViewById(id);
      if (btnR1 == null) {
        break missingId;
      }

      id = R.id.btnR2;
      Button btnR2 = rootView.findViewById(id);
      if (btnR2 == null) {
        break missingId;
      }

      id = R.id.btnX;
      ShapeableImageView btnX = rootView.findViewById(id);
      if (btnX == null) {
        break missingId;
      }

      id = R.id.btnY;
      ShapeableImageView btnY = rootView.findViewById(id);
      if (btnY == null) {
        break missingId;
      }

      id = R.id.buttonContainer;
      ConstraintLayout buttonContainer = rootView.findViewById(id);
      if (buttonContainer == null) {
        break missingId;
      }

      id = R.id.dPad;
      ImageView dPad = rootView.findViewById(id);
      if (dPad == null) {
        break missingId;
      }

      id = R.id.front;
      ImageView front = rootView.findViewById(id);
      if (front == null) {
        break missingId;
      }

      id = R.id.joyLeft;
      ImageView joyLeft = rootView.findViewById(id);
      if (joyLeft == null) {
        break missingId;
      }

      id = R.id.joyLeftTip;
      ImageView joyLeftTip = rootView.findViewById(id);
      if (joyLeftTip == null) {
        break missingId;
      }

      id = R.id.joyRight;
      ImageView joyRight = rootView.findViewById(id);
      if (joyRight == null) {
        break missingId;
      }

      id = R.id.joyRightTip;
      ImageView joyRightTip = rootView.findViewById(id);
      if (joyRightTip == null) {
        break missingId;
      }

      id = R.id.startButton;
      ImageView startButton = rootView.findViewById(id);
      if (startButton == null) {
        break missingId;
      }

      id = R.id.textStart;
      TextView textStart = rootView.findViewById(id);
      if (textStart == null) {
        break missingId;
      }

      return new FragmentControllerMappingBinding((ConstraintLayout) rootView, btnA, btnB, btnL1,
          btnL2, btnR1, btnR2, btnX, btnY, buttonContainer, dPad, front, joyLeft, joyLeftTip,
          joyRight, joyRightTip, startButton, textStart);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
