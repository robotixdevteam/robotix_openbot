// Generated by view binder compiler. Do not edit!
package org.openbot.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openbot.R;

public final class DialogEditModelBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnSubmit;

  @NonNull
  public final CardView cardView4;

  @NonNull
  public final Spinner classSpinner;

  @NonNull
  public final Button dismiss;

  @NonNull
  public final TextView edit;

  @NonNull
  public final EditText inputHeight;

  @NonNull
  public final EditText inputWidth;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayout5;

  @NonNull
  public final LinearLayout linearLayout6;

  @NonNull
  public final LinearLayout linearLayout7;

  @NonNull
  public final EditText name;

  @NonNull
  public final LinearLayout nameContainer;

  @NonNull
  public final TextView title;

  @NonNull
  public final Spinner typeSpinner;

  private DialogEditModelBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnSubmit,
      @NonNull CardView cardView4, @NonNull Spinner classSpinner, @NonNull Button dismiss,
      @NonNull TextView edit, @NonNull EditText inputHeight, @NonNull EditText inputWidth,
      @NonNull LinearLayout linearLayout, @NonNull LinearLayout linearLayout5,
      @NonNull LinearLayout linearLayout6, @NonNull LinearLayout linearLayout7,
      @NonNull EditText name, @NonNull LinearLayout nameContainer, @NonNull TextView title,
      @NonNull Spinner typeSpinner) {
    this.rootView = rootView;
    this.btnSubmit = btnSubmit;
    this.cardView4 = cardView4;
    this.classSpinner = classSpinner;
    this.dismiss = dismiss;
    this.edit = edit;
    this.inputHeight = inputHeight;
    this.inputWidth = inputWidth;
    this.linearLayout = linearLayout;
    this.linearLayout5 = linearLayout5;
    this.linearLayout6 = linearLayout6;
    this.linearLayout7 = linearLayout7;
    this.name = name;
    this.nameContainer = nameContainer;
    this.title = title;
    this.typeSpinner = typeSpinner;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogEditModelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogEditModelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_edit_model, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogEditModelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_submit;
      Button btnSubmit = rootView.findViewById(id);
      if (btnSubmit == null) {
        break missingId;
      }

      id = R.id.cardView4;
      CardView cardView4 = rootView.findViewById(id);
      if (cardView4 == null) {
        break missingId;
      }

      id = R.id.class_spinner;
      Spinner classSpinner = rootView.findViewById(id);
      if (classSpinner == null) {
        break missingId;
      }

      id = R.id.dismiss;
      Button dismiss = rootView.findViewById(id);
      if (dismiss == null) {
        break missingId;
      }

      id = R.id.edit;
      TextView edit = rootView.findViewById(id);
      if (edit == null) {
        break missingId;
      }

      id = R.id.inputHeight;
      EditText inputHeight = rootView.findViewById(id);
      if (inputHeight == null) {
        break missingId;
      }

      id = R.id.inputWidth;
      EditText inputWidth = rootView.findViewById(id);
      if (inputWidth == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = rootView.findViewById(id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout5;
      LinearLayout linearLayout5 = rootView.findViewById(id);
      if (linearLayout5 == null) {
        break missingId;
      }

      id = R.id.linearLayout6;
      LinearLayout linearLayout6 = rootView.findViewById(id);
      if (linearLayout6 == null) {
        break missingId;
      }

      id = R.id.linearLayout7;
      LinearLayout linearLayout7 = rootView.findViewById(id);
      if (linearLayout7 == null) {
        break missingId;
      }

      id = R.id.name;
      EditText name = rootView.findViewById(id);
      if (name == null) {
        break missingId;
      }

      id = R.id.nameContainer;
      LinearLayout nameContainer = rootView.findViewById(id);
      if (nameContainer == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = rootView.findViewById(id);
      if (title == null) {
        break missingId;
      }

      id = R.id.type_spinner;
      Spinner typeSpinner = rootView.findViewById(id);
      if (typeSpinner == null) {
        break missingId;
      }

      return new DialogEditModelBinding((ConstraintLayout) rootView, btnSubmit, cardView4,
          classSpinner, dismiss, edit, inputHeight, inputWidth, linearLayout, linearLayout5,
          linearLayout6, linearLayout7, name, nameContainer, title, typeSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
